{"ast":null,"code":"var _jsxFileName = \"/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js\";\nimport React from 'react';\nimport './Chronometer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chronometer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      seconds: '00',\n      minutes: '00',\n      hour: '00'\n    };\n  }\n\n  render() {\n    const {\n      seconds,\n      minutes,\n      hour\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chronometer\",\n      children: `${hour.toString()}:${minutes.toString()}:${seconds.toString()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Chronometer;","map":{"version":3,"sources":["/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js"],"names":["React","Chronometer","Component","constructor","state","seconds","minutes","hour","render","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AACDC,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEH,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA;AAApB,QAA6B,KAAKH,KAAxC;AAEF,wBAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACI,GAAEG,IAAI,CAACE,QAAL,EAAgB,IAAGH,OAAO,CAACG,QAAR,EAAmB,IAAGJ,OAAO,CAACI,QAAR,EAAmB;AADlE;AAAA;AAAA;AAAA;AAAA,YAFF;AAMD;;AAlByC;;AAqB1C,eAAeR,WAAf","sourcesContent":["import React from 'react'\nimport './Chronometer.css'\n\nclass Chronometer extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      seconds: '00',\n      minutes: '00',\n      hour: '00',\n    }\n  }\n  render(){\n    const { seconds, minutes, hour } = this.state\n\n  return (\n    \n    <div className=\"Chronometer\">\n      {`${hour.toString()}:${minutes.toString()}:${seconds.toString()}`}\n    </div>\n  );\n}\n}\n\nexport default Chronometer;\n"]},"metadata":{},"sourceType":"module"}