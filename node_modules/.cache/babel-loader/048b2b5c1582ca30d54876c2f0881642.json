{"ast":null,"code":"var _jsxFileName = \"/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js\";\nimport React from 'react';\nimport './Chronometer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chronometer extends React.Component {\n  constructor() {\n    super();\n\n    this.changeChronometer = () => {\n      this.interval = setInterval(() => {\n        console.log('aqui');\n        this.setState(state => ({\n          seconds: this.convertSubtraiString(state.seconds).length === 2 ? this.convertSubtraiString(state.seconds) : `0${this.convertSubtraiString(state.seconds)}`\n        }));\n      }, 1000);\n    };\n\n    this.stopChronometer = () => {\n      clearInterval(this.interval);\n    };\n\n    this.clearChronometer = () => {\n      this.setState({\n        seconds: '00',\n        minutes: '00',\n        hour: '00'\n      });\n    };\n\n    this.state = {\n      seconds: '59',\n      minutes: '03',\n      hour: '00'\n    };\n  }\n\n  convertSubtraiString(element) {\n    return parseInt(element).toString();\n  }\n\n  // changeState = ({ target }) => {\n  //   const { name } = target;\n  //   const value = target.value;\n  //   this.setState({\n  //     [name]: this.convertSubtraiString(value).length === 2 ? this.convertSubtraiString(value) : (`0${this.convertSubtraiString(value)}`),\n  // });\n  // }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.seconds === '00' && prevState.minutes === '00' && prevState.hour === '00') {\n      this.setState({\n        seconds: '00',\n        minutes: '00',\n        hour: '00'\n      });\n      clearInterval(this.interval);\n    } else if (prevState.seconds === '00' && prevState.minutes === '00') {\n      this.setState(state => ({\n        seconds: '59',\n        minutes: '59',\n        hour: (parseInt(state.minutes) - 1).toString()\n      }));\n    } else if (prevState.seconds === '00') {\n      this.setState(state => ({\n        seconds: '59',\n        minutes: this.convertSubtraiString(state.minutes).length === 2 ? this.convertSubtraiString(state.minutes) : `0${this.convertSubtraiString(state.minutes)}`,\n        hour: '00'\n      }));\n    }\n  }\n\n  render() {\n    const {\n      seconds,\n      minutes,\n      hour\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chronometer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${hour}:${minutes}:${seconds}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.changeChronometer,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stopChronometer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clearChronometer,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"hour\",\n          type: \"number\",\n          onChange: this.changeState,\n          min: \"0\",\n          max: \"24\",\n          placeholder: \"hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"minutes\",\n          type: \"number\",\n          onChange: this.changeState,\n          min: \"0\",\n          max: \"59\",\n          placeholder: \"minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"seconds\",\n          type: \"number\",\n          onChange: this.changeState,\n          min: \"0\",\n          max: \"59\",\n          placeholder: \"seconds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Chronometer;","map":{"version":3,"sources":["/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js"],"names":["React","Chronometer","Component","constructor","changeChronometer","interval","setInterval","console","log","setState","state","seconds","convertSubtraiString","length","stopChronometer","clearInterval","clearChronometer","minutes","hour","element","parseInt","toString","componentDidUpdate","prevProps","prevState","render","changeState"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Chronometer.css'\n\nclass Chronometer extends React.Component {\n  constructor(){\n    super();\n    \n    this.state = {\n      seconds: '59',\n      minutes: '03',\n      hour: '00',\n    }\n  }\n\n  changeChronometer = () => {\n    this.interval = setInterval(() => {\n    console.log('aqui')\n    this.setState((state) => ({\n      seconds: this.convertSubtraiString(state.seconds).length === 2 ? this.convertSubtraiString(state.seconds) : (`0${this.convertSubtraiString(state.seconds)}`),\n    }));\n  }, 1000);\n  }\n\n\n  convertSubtraiString(element){\n    return (parseInt(element)).toString();\n  }\n\n  stopChronometer = () => {\n    clearInterval(this.interval);\n  }\n\n  clearChronometer = () => {\n    this.setState({\n      seconds: '00',\n      minutes: '00',\n      hour: '00',\n  });\n  }\n\n  // changeState = ({ target }) => {\n  //   const { name } = target;\n  //   const value = target.value;\n  //   this.setState({\n  //     [name]: this.convertSubtraiString(value).length === 2 ? this.convertSubtraiString(value) : (`0${this.convertSubtraiString(value)}`),\n  // });\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    if( prevState.seconds === '00' && prevState.minutes === '00' && prevState.hour === '00'){\n      this.setState({\n        seconds: '00',\n        minutes: '00',\n        hour: '00',\n    });\n      clearInterval(this.interval);\n    }\n    else if( prevState.seconds === '00' && prevState.minutes === '00'){\n      this.setState((state) => ({\n        seconds: '59',\n        minutes: '59',\n        hour: (parseInt(state.minutes) -1).toString(),\n    }));\n    }\n    else if( prevState.seconds === '00' ){\n      this.setState((state) => ({\n        seconds: '59',\n        minutes: this.convertSubtraiString(state.minutes).length === 2 ? this.convertSubtraiString(state.minutes) : (`0${this.convertSubtraiString(state.minutes)}`),\n        hour: '00',\n    }));\n    }\n  }\n\n  render(){\n    const { seconds, minutes, hour} = this.state\n\n  return (\n    <div className=\"Chronometer\">\n      <p>{`${hour}:${minutes}:${seconds}`}</p>  \n      <button onClick={this.changeChronometer}>Play</button>\n      <button onClick={this.stopChronometer}>Stop</button>\n      <button onClick={this.clearChronometer}>Clear</button>\n      <form>\n        <input name='hour' type='number' onChange={this.changeState} min=\"0\" max=\"24\" placeholder=\"hour\" /> \n        <input name='minutes' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"minutes\"/> \n        <input name='seconds' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"seconds\"/> \n      </form>\n    </div>\n  );\n}\n}\n\nexport default Chronometer;\n"]},"metadata":{},"sourceType":"module"}