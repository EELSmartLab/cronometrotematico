{"ast":null,"code":"var _jsxFileName = \"/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js\";\nimport React from 'react';\nimport './Chronometer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chronometer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      seconds: '59',\n      minutes: '02',\n      hour: '00'\n    };\n  }\n\n  convertSubtraiString(element) {\n    return (parseInt(element) - 1).toString();\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      console.log('aqui');\n      this.setState(state => ({\n        seconds: this.convertSubtraiString(state.seconds).length === 2 ? this.convertSubtraiString(state.seconds) : `0${this.convertSubtraiString(state.seconds)}`\n      }));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.seconds === '00' && prevState.minutes === '00' && prevState.hour === '00') {\n      this.setState({\n        seconds: '00',\n        minutes: '00',\n        hour: '00'\n      });\n      clearInterval(this.interval);\n    } else if (prevState.seconds === '00' && prevState.minutes === '00') {\n      this.setState(state => ({\n        seconds: '59',\n        minutes: '59',\n        hour: (parseInt(state.minutes) - 1).toString()\n      }));\n    } else if (prevState.seconds === '00') {\n      this.setState(state => ({\n        seconds: '59',\n        minutes: (parseInt(state.seconds) - 1).toString().length === 2 ? (parseInt(state.minutes) - 1).toString() : `0${(parseInt(state.minutes) - 1).toString()}`,\n        hour: '00'\n      }));\n    }\n  }\n\n  render() {\n    const {\n      seconds,\n      minutes,\n      hour\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chronometer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${hour}:${minutes}:${seconds}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Chronometer;","map":{"version":3,"sources":["/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js"],"names":["React","Chronometer","Component","constructor","state","seconds","minutes","hour","convertSubtraiString","element","parseInt","toString","componentDidMount","interval","setInterval","console","log","setState","length","componentDidUpdate","prevProps","prevState","clearInterval","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Chronometer.css'\n\nclass Chronometer extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      seconds: '59',\n      minutes: '02',\n      hour: '00',\n    }\n  }\n\n  convertSubtraiString(element){\n    return (parseInt(element)-1).toString();\n  }\n\n  componentDidMount() {\n      this.interval = setInterval(() => {\n      console.log('aqui')\n      this.setState((state) => ({\n        seconds: this.convertSubtraiString(state.seconds).length === 2 ? this.convertSubtraiString(state.seconds) : (`0${this.convertSubtraiString(state.seconds)}`),\n      }));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if( prevState.seconds === '00' && prevState.minutes === '00' && prevState.hour === '00'){\n      this.setState({\n        seconds: '00',\n        minutes: '00',\n        hour: '00',\n    });\n      clearInterval(this.interval);\n    }\n    else if( prevState.seconds === '00' && prevState.minutes === '00'){\n      this.setState((state) => ({\n        seconds: '59',\n        minutes: '59',\n        hour: (parseInt(state.minutes) -1).toString(),\n    }));\n    }\n    else if( prevState.seconds === '00' ){\n      this.setState((state) => ({\n        seconds: '59',\n        minutes: (parseInt(state.seconds)-1).toString().length === 2 ? (parseInt(state.minutes) -1).toString() : (`0${(parseInt(state.minutes) -1).toString()}`),\n        hour: '00',\n    }));\n    }\n  }\n\n  render(){\n    const { seconds, minutes, hour} = this.state\n\n  return (\n    <div className=\"Chronometer\">\n      <p>{`${hour}:${minutes}:${seconds}`}</p>      \n    </div>\n  );\n}\n}\n\nexport default Chronometer;\n"]},"metadata":{},"sourceType":"module"}