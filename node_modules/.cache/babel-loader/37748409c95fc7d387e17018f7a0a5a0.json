{"ast":null,"code":"var _jsxFileName = \"/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js\";\nimport React from 'react';\nimport './Chronometer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chronometer extends React.Component {\n  constructor() {\n    super();\n\n    this.changeChronometer = () => {\n      this.setState(state => ({\n        showChronometer: !state.showChronometer\n      }));\n    };\n\n    this.interval = () => {\n      setInterval(() => {\n        console.log('aqui');\n        this.setState(state => ({\n          seconds: (parseInt(state.seconds) - 1).toString()\n        }));\n      }, 1000);\n    };\n\n    this.state = {\n      seconds: '50',\n      minutes: '00',\n      hour: '00',\n      showChronometer: false\n    };\n  }\n\n  render() {\n    const {\n      seconds,\n      minutes,\n      hour,\n      showChronometer\n    } = this.state;\n\n    if (seconds === '00') {\n      clearInterval();\n    }\n\n    if (showChronometer === \"Play\") {\n      interval();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chronometer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${hour}:${minutes}:${seconds}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.changeChronometer,\n        children: showChronometer ? \"Stop\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Chronometer;","map":{"version":3,"sources":["/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js"],"names":["React","Chronometer","Component","constructor","changeChronometer","setState","state","showChronometer","interval","setInterval","console","log","seconds","parseInt","toString","minutes","hour","render","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAUbC,iBAVa,GAUO,MAAM;AACxB,WAAKC,QAAL,CAAeC,KAAD,KAAY;AAACC,QAAAA,eAAe,EAAG,CAACD,KAAK,CAACC;AAA1B,OAAZ,CAAd;AACD,KAZY;;AAAA,SAcbC,QAda,GAcF,MAAM;AACfC,MAAAA,WAAW,CAAC,MAAM;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,aAAKN,QAAL,CAAeC,KAAD,KAAY;AACxBM,UAAAA,OAAO,EAAE,CAACC,QAAQ,CAACP,KAAK,CAACM,OAAP,CAAR,GAAyB,CAA1B,EAA6BE,QAA7B;AADe,SAAZ,CAAd;AAGD,OALU,EAKR,IALQ,CAAX;AAMD,KArBY;;AAEX,SAAKR,KAAL,GAAa;AACXM,MAAAA,OAAO,EAAE,IADE;AAEXG,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,IAAI,EAAE,IAHK;AAIXT,MAAAA,eAAe,EAAC;AAJL,KAAb;AAMD;;AAeDU,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEL,MAAAA,OAAF;AAAWG,MAAAA,OAAX;AAAoBC,MAAAA,IAApB;AAA0BT,MAAAA;AAA1B,QAA8C,KAAKD,KAAzD;;AAEA,QAAGM,OAAO,KAAK,IAAf,EAAoB;AAClBM,MAAAA,aAAa;AACd;;AAED,QAAGX,eAAe,KAAK,MAAvB,EAA8B;AAC5BC,MAAAA,QAAQ;AACT;;AAEH,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA,kBAAK,GAAEQ,IAAK,IAAGD,OAAQ,IAAGH,OAAQ;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKR,iBAAtB;AAAA,kBACGG,eAAe,GAAG,MAAH,GAAY;AAD9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA3CyC;;AA8C1C,eAAeN,WAAf","sourcesContent":["import React from 'react'\nimport './Chronometer.css'\n\nclass Chronometer extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      seconds: '50',\n      minutes: '00',\n      hour: '00',\n      showChronometer:false,\n    }\n  }\n\n  changeChronometer = () => {\n    this.setState((state) => ({showChronometer : !state.showChronometer}));\n  }\n\n  interval = () => {\n    setInterval(() => {\n      console.log('aqui')\n      this.setState((state) => ({\n        seconds: (parseInt(state.seconds) -1).toString(),\n      }));\n    }, 1000)\n  }\n\n  render(){\n    const { seconds, minutes, hour, showChronometer } = this.state\n\n    if(seconds === '00'){\n      clearInterval()\n    }\n\n    if(showChronometer === \"Play\"){\n      interval()\n    }\n\n  return (\n    <div className=\"Chronometer\">\n      <p>{`${hour}:${minutes}:${seconds}`}</p>      \n      <button onClick={this.changeChronometer}>\n        {showChronometer ? \"Stop\" : \"Play\"}\n      </button>\n    </div>\n  );\n}\n}\n\nexport default Chronometer;\n"]},"metadata":{},"sourceType":"module"}