{"ast":null,"code":"var _jsxFileName = \"/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js\";\nimport React from 'react';\nimport './Chronometer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chronometer extends React.Component {\n  constructor() {\n    super();\n\n    this.changeState = ({\n      target\n    }) => {\n      const {\n        name\n      } = target;\n      const value = !target.value ? '00' : target.value;\n      this.setState({\n        [name]: this.convertString(value).length === 2 ? this.convertString(value) : `0${this.convertString(value)}`,\n        update: false\n      });\n    };\n\n    this.stopChronometer = () => {\n      clearInterval(this.interval);\n      this.setState({\n        start: false\n      });\n    };\n\n    this.clearChronometer = () => {\n      this.setState({\n        seconds: '00',\n        minutes: '00',\n        hour: '00'\n      });\n    };\n\n    this.changeChronometer = () => {\n      if ((this.state.seconds !== '00' || this.state.minutes !== '00' || this.state.hour !== '00') && this.state.start === false) {\n        this.interval = setInterval(() => {\n          console.log('aqui');\n          this.setState(state => ({\n            seconds: parseInt(state.seconds) === 0 ? '59' : this.convertSubtraiString(state.seconds).length === 2 ? this.convertSubtraiString(state.seconds) : `0${this.convertSubtraiString(state.seconds)}`,\n            minutes: parseInt(state.minutes) === 0 && parseInt(state.seconds) === 0 ? '59' : parseInt(state.seconds) === 0 ? this.convertSubtraiString(state.minutes).length === 2 ? this.convertSubtraiString(state.minutes) : `0${this.convertSubtraiString(state.minutes)}` : state.minutes,\n            hour: parseInt(state.minutes) === 0 && parseInt(state.seconds) === 0 && parseInt(state.hour) === 0 ? this.convertSubtraiString(state.hour).length === 2 ? this.convertSubtraiString(state.hour) : `0${this.convertSubtraiString(state.hour)}` : state.hour,\n            update: true,\n            start: true\n          }));\n        }, 1000);\n      }\n    };\n\n    this.state = {\n      seconds: '00',\n      minutes: '00',\n      hour: '00',\n      update: false,\n      start: false\n    };\n  }\n\n  convertString(element) {\n    return parseInt(element).toString();\n  }\n\n  convertSubtraiString(element) {\n    return (parseInt(element) - 1).toString();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.update) {\n      if (prevState.seconds === '00' && prevState.minutes === '00' && prevState.hour === '00') {\n        this.setState({\n          seconds: '00',\n          minutes: '00',\n          hour: '00',\n          update: false,\n          start: true\n        });\n        clearInterval(this.interval);\n        alert('Terminou o intervalo! VQV!');\n      } else if (prevState.seconds === '00' && prevState.minutes === '00') {\n        console.log('tufo');\n        this.setState(state => ({\n          seconds: '59',\n          minutes: '59',\n          hour: (parseInt(state.hour) - 1).toString()\n        }));\n      }\n    }\n  }\n\n  render() {\n    const {\n      seconds,\n      minutes,\n      hour\n    } = this.state;\n    let classChro = 'Chronometer';\n    let classButton = 'buttonChronometer';\n    let classInput = 'inputChronometer';\n    let classText = 'textChronometer';\n    let {\n      tema\n    } = this.props;\n\n    if (tema === true) {\n      classChro = 'ChronometerTrybe';\n      classButton = 'buttonChronometerTrybe';\n      classInput = 'inputChronometerTrybe';\n      classText = 'textChronometerTrybe';\n    }\n\n    if (minutes === '02' && hour === '00') {\n      classChro = 'Chronometer2';\n    }\n\n    if (minutes === '01' && hour === '00') {\n      classChro = 'Chronometer3';\n    }\n\n    if (minutes === '00' && seconds !== '00' && hour === '00') {\n      classChro = 'Chronometer1';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classChro,\n        children: `${hour}:${minutes}:${seconds}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classButton,\n        onClick: this.changeChronometer,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classButton,\n        onClick: this.stopChronometer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classButton,\n        onClick: this.clearChronometer,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: classInput,\n          name: \"minutes\",\n          type: \"button\",\n          onClick: this.changeState,\n          value: \"5:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classInput,\n          name: \"minutes\",\n          type: \"button\",\n          onClick: this.changeState,\n          value: \"10:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classInput,\n          name: \"minutes\",\n          type: \"button\",\n          onClick: this.changeState,\n          value: \"15:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: classText,\n          name: \"hour\",\n          type: \"number\",\n          onChange: this.changeState,\n          min: \"0\",\n          max: \"24\",\n          placeholder: \"hour\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classText,\n          name: \"minutes\",\n          type: \"number\",\n          onChange: this.changeState,\n          min: \"0\",\n          max: \"59\",\n          placeholder: \"minutes\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classText,\n          name: \"seconds\",\n          type: \"number\",\n          onChange: this.changeState,\n          min: \"0\",\n          max: \"59\",\n          placeholder: \"seconds\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Chronometer;","map":{"version":3,"sources":["/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js"],"names":["React","Chronometer","Component","constructor","changeState","target","name","value","setState","convertString","length","update","stopChronometer","clearInterval","interval","start","clearChronometer","seconds","minutes","hour","changeChronometer","state","setInterval","console","log","parseInt","convertSubtraiString","element","toString","componentDidUpdate","prevProps","prevState","alert","render","classChro","classButton","classInput","classText","tema","props"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Chronometer.css'\n\nclass Chronometer extends React.Component {\n  constructor(){\n    super();\n    \n    this.state = {\n      seconds: '00',\n      minutes: '00',\n      hour: '00',\n      update: false,\n      start: false,\n    }\n  }\n\n  convertString(element){\n    return (parseInt(element)).toString();\n  }\n\n  changeState = ({ target }) => {\n    const { name } = target;\n    const value = !target.value ? '00': target.value;\n    this.setState({\n      [name]: this.convertString(value).length === 2 ? this.convertString(value) : (`0${this.convertString(value)}`),\n      update: false,\n  });\n  }\n\n  convertSubtraiString(element){\n    return (parseInt(element)-1).toString();\n  }\n\n  stopChronometer = () => {\n    clearInterval(this.interval);\n    this.setState({\n      start: false,\n  });\n  }\n\n  clearChronometer = () => {\n    this.setState({\n      seconds: '00',\n      minutes: '00',\n      hour: '00',\n  });\n  }\n\n  changeChronometer = () => {\n    if( (this.state.seconds !== '00' || this.state.minutes !== '00' || this.state.hour !== '00') && this.state.start === false){\n    this.interval = setInterval(() => {\n    console.log('aqui')\n      this.setState((state) => ({\n        seconds: parseInt(state.seconds) === 0 ? '59' : (this.convertSubtraiString(state.seconds).length === 2 ? this.convertSubtraiString(state.seconds) : (`0${this.convertSubtraiString(state.seconds)}`)),\n        minutes: parseInt(state.minutes) === 0 && parseInt(state.seconds) === 0? '59' : (parseInt(state.seconds) === 0 ? (this.convertSubtraiString(state.minutes).length === 2 ? this.convertSubtraiString(state.minutes) : (`0${this.convertSubtraiString(state.minutes)}`)) : state.minutes),\n        hour: parseInt(state.minutes) === 0 && parseInt(state.seconds) === 0 && parseInt(state.hour) === 0? (this.convertSubtraiString(state.hour).length === 2 ? this.convertSubtraiString(state.hour) : (`0${this.convertSubtraiString(state.hour)}`)) : state.hour,\n        update: true,\n        start: true,\n      }));\n    }, 1000);\n  }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.update){\n      if( prevState.seconds === '00' && prevState.minutes === '00' && prevState.hour === '00'){\n        this.setState({\n          seconds: '00',\n          minutes: '00',\n          hour: '00',\n          update: false,\n          start: true,\n      });\n        clearInterval(this.interval);\n        alert('Terminou o intervalo! VQV!')\n      }\n      else if( prevState.seconds === '00' && prevState.minutes === '00'){\n        console.log('tufo')\n        this.setState((state) => ({\n          \n          seconds: '59',\n          minutes: '59',\n          hour: (parseInt(state.hour) -1).toString(),\n      }));\n      }\n    }\n  }\n\n  render(){\n    const { seconds, minutes, hour} = this.state;\n    let classChro = 'Chronometer';\n    let classButton = 'buttonChronometer';\n    let classInput = 'inputChronometer';\n    let classText = 'textChronometer';\n    let { tema } = this.props\n\n    if(tema === true){\n      classChro = 'ChronometerTrybe';\n      classButton = 'buttonChronometerTrybe';\n      classInput = 'inputChronometerTrybe';\n      classText = 'textChronometerTrybe';\n    }\n\n    if(minutes === '02' && hour === '00'){\n      classChro = 'Chronometer2'\n    }\n\n    if(minutes === '01' && hour === '00'){\n      classChro = 'Chronometer3'\n    }\n\n    if(minutes === '00' && seconds !== '00' && hour === '00'){\n      classChro = 'Chronometer1'\n    }\n\n\n  return (\n    <div>\n      <p className={ classChro }>{`${hour}:${minutes}:${seconds}`}</p>  \n      <button className={classButton} onClick={this.changeChronometer}>Play</button>\n      <button className={classButton} onClick={this.stopChronometer}>Stop</button>\n      <button className={classButton} onClick={this.clearChronometer}>Clear</button>\n      <form>\n        <input className={classInput} name='minutes' type='button' onClick={this.changeState} value='5:00'/>\n        <input className={classInput} name='minutes' type='button' onClick={this.changeState} value='10:00'/>\n        <input className={classInput} name='minutes' type='button' onClick={this.changeState} value='15:00'/>\n      </form>\n      <form>\n        <input className={classText} name='hour' type='number' onChange={this.changeState} min=\"0\" max=\"24\" placeholder=\"hour\" required/> \n        <input className={classText} name='minutes' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"minutes\" required/> \n        <input className={classText} name='seconds' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"seconds\" required/> \n       </form>\n    </div>\n  );\n}\n}\n\nexport default Chronometer;\n"]},"metadata":{},"sourceType":"module"}