{"ast":null,"code":"var _jsxFileName = \"/home/duda/Trybe/cronometro/cronometro/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from 'react';\nimport Chronometer from './Chronometer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showChronometer: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Chronometer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App; // import React from 'react'\n// import './Chronometer.css'\n// class Chronometer extends React.Component {\n//   constructor(){\n//     super();\n//     this.state = {\n//       seconds: '59',\n//       minutes: '03',\n//       hour: '00',\n//     }\n//   }\n//   changeChronometer = () => {\n//     this.interval = setInterval(() => {\n//     console.log('aqui')\n//     this.setState((state) => ({\n//       seconds: this.convertSubtraiString(state.seconds).length === 2 ? this.convertSubtraiString(state.seconds) : (`0${this.convertSubtraiString(state.seconds)}`),\n//     }));\n//   }, 1000);\n//   }\n//   convertSubtraiString(element){\n//     return (parseInt(element)).toString();\n//   }\n//   stopChronometer = () => {\n//     clearInterval(this.interval);\n//   }\n//   clearChronometer = () => {\n//     this.setState({\n//       seconds: '00',\n//       minutes: '00',\n//       hour: '00',\n//   });\n//   }\n//   // changeState = ({ target }) => {\n//   //   const { name } = target;\n//   //   const value = target.value;\n//   //   this.setState({\n//   //     [name]: this.convertSubtraiString(value).length === 2 ? this.convertSubtraiString(value) : (`0${this.convertSubtraiString(value)}`),\n//   // });\n//   // }\n//   componentDidUpdate(prevProps, prevState) {\n//     if( prevState.seconds === '00' && prevState.minutes === '00' && prevState.hour === '00'){\n//       this.setState({\n//         seconds: '00',\n//         minutes: '00',\n//         hour: '00',\n//     });\n//       clearInterval(this.interval);\n//     }\n//     else if( prevState.seconds === '00' && prevState.minutes === '00'){\n//       this.setState((state) => ({\n//         seconds: '59',\n//         minutes: '59',\n//         hour: (parseInt(state.minutes) -1).toString(),\n//     }));\n//     }\n//     else if( prevState.seconds === '00' ){\n//       this.setState((state) => ({\n//         seconds: '59',\n//         minutes: this.convertSubtraiString(state.minutes).length === 2 ? this.convertSubtraiString(state.minutes) : (`0${this.convertSubtraiString(state.minutes)}`),\n//         hour: '00',\n//     }));\n//     }\n//   }\n//   render(){\n//     const { seconds, minutes, hour} = this.state\n//   return (\n//     <div className=\"Chronometer\">\n//       <p>{`${hour}:${minutes}:${seconds}`}</p>  \n//       <button onClick={this.changeChronometer}>Play</button>\n//       <button onClick={this.stopChronometer}>Stop</button>\n//       <button onClick={this.clearChronometer}>Clear</button>\n//       <form>\n//         <input name='hour' type='number' onChange={this.changeState} min=\"0\" max=\"24\" placeholder=\"hour\" /> \n//         <input name='minutes' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"minutes\"/> \n//         <input name='seconds' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"seconds\"/> \n//       </form>\n//     </div>\n//   );\n// }\n// }\n// export default Chronometer;","map":{"version":3,"sources":["/home/duda/Trybe/cronometro/cronometro/src/App.js"],"names":["React","Chronometer","App","Component","constructor","state","showChronometer","render","logo"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAC;AADL,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAI;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQC;;AAjB+B;;AAmBlC,eAAeN,GAAf,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport Chronometer from './Chronometer';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      showChronometer:false,\n    }\n  }\n\n  render () {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Chronometer/>\n      </header>\n    </div>\n  );\n  }\n}\nexport default App;\n\n// import React from 'react'\n// import './Chronometer.css'\n\n// class Chronometer extends React.Component {\n//   constructor(){\n//     super();\n    \n//     this.state = {\n//       seconds: '59',\n//       minutes: '03',\n//       hour: '00',\n//     }\n//   }\n\n//   changeChronometer = () => {\n//     this.interval = setInterval(() => {\n//     console.log('aqui')\n//     this.setState((state) => ({\n//       seconds: this.convertSubtraiString(state.seconds).length === 2 ? this.convertSubtraiString(state.seconds) : (`0${this.convertSubtraiString(state.seconds)}`),\n//     }));\n//   }, 1000);\n//   }\n\n\n//   convertSubtraiString(element){\n//     return (parseInt(element)).toString();\n//   }\n\n//   stopChronometer = () => {\n//     clearInterval(this.interval);\n//   }\n\n//   clearChronometer = () => {\n//     this.setState({\n//       seconds: '00',\n//       minutes: '00',\n//       hour: '00',\n//   });\n//   }\n\n//   // changeState = ({ target }) => {\n//   //   const { name } = target;\n//   //   const value = target.value;\n//   //   this.setState({\n//   //     [name]: this.convertSubtraiString(value).length === 2 ? this.convertSubtraiString(value) : (`0${this.convertSubtraiString(value)}`),\n//   // });\n//   // }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if( prevState.seconds === '00' && prevState.minutes === '00' && prevState.hour === '00'){\n//       this.setState({\n//         seconds: '00',\n//         minutes: '00',\n//         hour: '00',\n//     });\n//       clearInterval(this.interval);\n//     }\n//     else if( prevState.seconds === '00' && prevState.minutes === '00'){\n//       this.setState((state) => ({\n//         seconds: '59',\n//         minutes: '59',\n//         hour: (parseInt(state.minutes) -1).toString(),\n//     }));\n//     }\n//     else if( prevState.seconds === '00' ){\n//       this.setState((state) => ({\n//         seconds: '59',\n//         minutes: this.convertSubtraiString(state.minutes).length === 2 ? this.convertSubtraiString(state.minutes) : (`0${this.convertSubtraiString(state.minutes)}`),\n//         hour: '00',\n//     }));\n//     }\n//   }\n\n//   render(){\n//     const { seconds, minutes, hour} = this.state\n\n//   return (\n//     <div className=\"Chronometer\">\n//       <p>{`${hour}:${minutes}:${seconds}`}</p>  \n//       <button onClick={this.changeChronometer}>Play</button>\n//       <button onClick={this.stopChronometer}>Stop</button>\n//       <button onClick={this.clearChronometer}>Clear</button>\n//       <form>\n//         <input name='hour' type='number' onChange={this.changeState} min=\"0\" max=\"24\" placeholder=\"hour\" /> \n//         <input name='minutes' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"minutes\"/> \n//         <input name='seconds' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"seconds\"/> \n//       </form>\n//     </div>\n//   );\n// }\n// }\n\n// export default Chronometer;"]},"metadata":{},"sourceType":"module"}