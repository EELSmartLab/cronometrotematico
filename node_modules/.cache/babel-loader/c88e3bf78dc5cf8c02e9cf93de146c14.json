{"ast":null,"code":"var _jsxFileName = \"/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js\";\nimport React from 'react';\nimport './Chronometer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chronometer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      seconds: '50',\n      minutes: '00',\n      hour: '00'\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      console.log('aqui');\n      this.setState(state => ({\n        seconds: (parseInt(state.seconds) - 1).toString()\n      }));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.seconds === '0') {\n      this.setState({\n        seconds: '50'\n      });\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    const {\n      seconds,\n      minutes,\n      hour\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chronometer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${hour}:${minutes}:${seconds}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Chronometer;","map":{"version":3,"sources":["/home/duda/Trybe/cronometro/cronometro/src/Chronometer.js"],"names":["React","Chronometer","Component","constructor","state","seconds","minutes","hour","componentDidMount","interval","setInterval","console","log","setState","parseInt","toString","componentDidUpdate","prevProps","prevState","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAKC,QAAL,CAAeT,KAAD,KAAY;AACxBC,QAAAA,OAAO,EAAE,CAACS,QAAQ,CAACV,KAAK,CAACC,OAAP,CAAR,GAAyB,CAA1B,EAA6BU,QAA7B;AADe,OAAZ,CAAd;AAGD,KAL4B,EAK1B,IAL0B,CAA3B;AAMH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACb,OAAV,KAAsB,GAA1B,EAA8B;AAC5B,WAAKQ,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAE;AAAV,OAAd;AACAc,MAAAA,aAAa,CAAC,KAAKV,QAAN,CAAb;AACD;AACF;;AAEDW,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEf,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA;AAApB,QAA4B,KAAKH,KAAvC;AAEF,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAA,kBAAK,GAAEG,IAAK,IAAGD,OAAQ,IAAGD,OAAQ;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAlCyC;;AAqC1C,eAAeJ,WAAf","sourcesContent":["import React from 'react'\nimport './Chronometer.css'\n\nclass Chronometer extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      seconds: '50',\n      minutes: '00',\n      hour: '00',\n    }\n  }\n\n  componentDidMount() {\n      this.interval = setInterval(() => {\n      console.log('aqui')\n      this.setState((state) => ({\n        seconds: (parseInt(state.seconds) -1).toString(),\n      }));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if( prevState.seconds === '0'){\n      this.setState({seconds: '50'});\n      clearInterval(this.interval);\n    }\n  }\n\n  render(){\n    const { seconds, minutes, hour} = this.state\n\n  return (\n    <div className=\"Chronometer\">\n      <p>{`${hour}:${minutes}:${seconds}`}</p>      \n    </div>\n  );\n}\n}\n\nexport default Chronometer;\n"]},"metadata":{},"sourceType":"module"}