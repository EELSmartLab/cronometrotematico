{"version":3,"sources":["Chronometer.js","App.js","reportWebVitals.js","index.js"],"names":["Chronometer","changeState","target","name","value","setState","convertString","length","stopChronometer","clearInterval","interval","start","clearChronometer","seconds","minutes","hour","update","changeChronometer","state","setInterval","console","log","parseInt","convertSubtraiString","element","toString","prevProps","prevState","this","alert","classChro","classButton","classInput","classText","tema","props","className","onClick","type","onChange","min","max","placeholder","required","React","Component","App","changeImage","showImage","src","width","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b2a56a1.chunk.js","sourcesContent":["import React from 'react'\nimport './Chronometer.css'\n\nclass Chronometer extends React.Component {\n  constructor(){\n    super();\n    \n    this.state = {\n      seconds: '00',\n      minutes: '00',\n      hour: '00',\n      update: false,\n      start: false,\n    }\n  }\n\n  convertString(element){\n    return (parseInt(element)).toString();\n  }\n\n  changeState = ({ target }) => {\n    const { name } = target;\n    const value = !target.value ? '00': target.value;\n    this.setState({\n      [name]: this.convertString(value).length === 2 ? this.convertString(value) : (`0${this.convertString(value)}`),\n      update: false,\n  });\n  }\n\n  convertSubtraiString(element){\n    return (parseInt(element)-1).toString();\n  }\n\n  stopChronometer = () => {\n    clearInterval(this.interval);\n    this.setState({\n      start: false,\n  });\n  }\n\n  clearChronometer = () => {\n    clearInterval(this.interval);\n    this.setState({\n      seconds: '00',\n      minutes: '00',\n      hour: '00',\n      update: false,\n  });\n  }\n\n  changeChronometer = () => {\n    if( (this.state.seconds !== '00' || this.state.minutes !== '00' || this.state.hour !== '00') && this.state.start === false){\n    this.interval = setInterval(() => {\n    console.log('aqui')\n      this.setState((state) => ({\n        seconds: parseInt(state.seconds) === 0 ? '59' : (this.convertSubtraiString(state.seconds).length === 2 ? this.convertSubtraiString(state.seconds) : (`0${this.convertSubtraiString(state.seconds)}`)),\n        minutes: parseInt(state.minutes) === 0 && parseInt(state.seconds) === 0? '59' : (parseInt(state.seconds) === 0 ? (this.convertSubtraiString(state.minutes).length === 2 ? this.convertSubtraiString(state.minutes) : (`0${this.convertSubtraiString(state.minutes)}`)) : state.minutes),\n        hour: parseInt(state.minutes) === 0 && parseInt(state.seconds) === 0 && parseInt(state.hour) === 0? (this.convertSubtraiString(state.hour).length === 2 ? this.convertSubtraiString(state.hour) : (`0${this.convertSubtraiString(state.hour)}`)) : state.hour,\n        update: true,\n        start: true,\n      }));\n    }, 1000);\n  }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.update){\n      if( prevState.seconds === '00' && prevState.minutes === '00' && prevState.hour === '00' && this.state.start === true){\n        this.setState({\n          seconds: '00',\n          minutes: '00',\n          hour: '00',\n          update: false,\n          start: false,\n      });\n        clearInterval(this.interval);\n        alert('Terminou o intervalo! VQV!')\n      }\n      else if( prevState.seconds === '00' && prevState.minutes === '00'){\n        console.log('tufo')\n        this.setState((state) => ({\n          seconds: '59',\n          minutes: '59',\n          hour: (parseInt(state.hour) -1).toString(),\n      }));\n      }\n    }\n  }\n\n  render(){\n    const { seconds, minutes, hour} = this.state;\n    let classChro = 'Chronometer';\n    let classButton = 'buttonChronometer';\n    let classInput = 'inputChronometer';\n    let classText = 'textChronometer';\n    let { tema } = this.props\n\n    if(tema === 2){\n      classChro = 'ChronometerTrybe';\n      classButton = 'buttonChronometerTrybe';\n      classInput = 'inputChronometerTrybe';\n      classText = 'textChronometerTrybe';\n    }\n\n    if(tema === 3){\n      classChro = 'ChronometerStar';\n      classButton = 'buttonChronometerStar';\n      classInput = 'inputChronometerStar';\n      classText = 'textChronometerStar';\n    }\n\n    if(minutes === '02' && hour === '00'){\n      classChro = 'Chronometer2'\n    }\n\n    if(minutes === '01' && hour === '00'){\n      classChro = 'Chronometer3'\n    }\n\n    if(minutes === '00' && seconds !== '00' && hour === '00'){\n      classChro = 'Chronometer1'\n    }\n\n\n  return (\n    <div>\n      <p className={ classChro }>{`${hour}:${minutes}:${seconds}`}</p>  \n      <button className={classButton} onClick={this.changeChronometer}>Play</button>\n      <button className={classButton} onClick={this.stopChronometer}>Stop</button>\n      <button className={classButton} onClick={this.clearChronometer}>Clear</button>\n      <form>\n        <input className={classInput} name='minutes' type='button' onClick={this.changeState} value='5:00'/>\n        <input className={classInput} name='minutes' type='button' onClick={this.changeState} value='10:00'/>\n        <input className={classInput} name='minutes' type='button' onClick={this.changeState} value='15:00'/>\n      </form>\n      <form>\n        <input className={classText} name='hour' type='number' onChange={this.changeState} min=\"0\" max=\"24\" placeholder=\"hour\" required/> \n        <input className={classText} name='minutes' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"minutes\" required/> \n        <input className={classText} name='seconds' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"seconds\" required/> \n       </form>\n    </div>\n  );\n}\n}\n\nexport default Chronometer;\n","\nimport './App.css';\nimport React from 'react'\nimport Chronometer from './Chronometer';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      showImage: 1,\n    }\n  }\n\n  changeImage = () => {\n    console.log('aqui')\n    this.setState((prevState) => ({ showImage: prevState.showImage === 3 ? 1 : prevState.showImage + 1}));\n  }\n\n  render () {\n    const { showImage } = this.state;\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {showImage === 3 ? <span onClick={this.changeImage}><img  src='./logoStarWars.svg' width='300' className=\"App-logo\" alt=\"logo\" /></span> : (showImage === 2 ?  <span onClick={this.changeImage}><img  src='./logoTrybe.svg' width='210' className=\"App-logo\" alt=\"logo\" /></span> :  <span onClick={this.changeImage}><img  src='./logo.svg' className=\"App-logo\" alt=\"logo\" /></span>)}\n        <Chronometer className=\"Chronometer\" tema={showImage} />\n      </header>\n    </div>\n  );\n  }\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}