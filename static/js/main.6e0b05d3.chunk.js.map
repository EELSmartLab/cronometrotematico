{"version":3,"sources":["Chronometer.js","App.js","reportWebVitals.js","index.js"],"names":["Chronometer","changeState","target","name","value","value_final","setState","convertString","length","stopChronometer","clearInterval","interval","start","clearChronometer","seconds","minutes","hour","update","changeChronometer","state","setInterval","parseInt","convertSubtraiString","element","toString","prevProps","prevState","this","alert","classChro","classButton","classInput","classText","tema","props","className","onClick","type","onChange","min","max","placeholder","required","React","Component","App","changeImage","showImage","src","width","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e0b05d3.chunk.js","sourcesContent":["import React from 'react'\nimport './Chronometer.css'\n\nclass Chronometer extends React.Component {\n  constructor(){\n    super();\n    \n    this.state = {\n      seconds: '00',\n      minutes: '00',\n      hour: '00',\n      update: false,\n      start: false,\n    }\n  }\n\n  convertString(element){\n    return (parseInt(element)).toString();\n  }\n\n  changeState = ({ target }) => {\n    const { name } = target;\n    const value = target.value ? '00': target.value;\n    const value_final = value > 59 ? '59' : value\n    this.setState({\n      [name]: this.convertString(value_final).length === 2 ? this.convertString(value_final) : (`0${this.convertString(value_final)}`),\n      update: false,\n  });\n  }\n\n  convertSubtraiString(element){\n    return (parseInt(element)-1).toString();\n  }\n\n  stopChronometer = () => {\n    clearInterval(this.interval);\n    this.setState({\n      start: false,\n  });\n  }\n\n  clearChronometer = () => {\n    clearInterval(this.interval);\n    this.setState({\n      seconds: '00',\n      minutes: '00',\n      hour: '00',\n      update: false,\n  });\n  }\n\n  changeChronometer = () => {\n    if( (this.state.seconds !== '00' || this.state.minutes !== '00' || this.state.hour !== '00') && this.state.start === false){\n    this.interval = setInterval(() => {\n      this.setState((state) => ({\n        seconds: parseInt(state.seconds) === 0 ? '59' : (this.convertSubtraiString(state.seconds).length === 2 ? this.convertSubtraiString(state.seconds) : (`0${this.convertSubtraiString(state.seconds)}`)),\n        minutes: parseInt(state.minutes) === 0 && parseInt(state.seconds) === 0 ? '59' : (parseInt(state.seconds) === 0 ? (this.convertSubtraiString(state.minutes).length === 2 ? this.convertSubtraiString(state.minutes) : (`0${this.convertSubtraiString(state.minutes)}`)) : state.minutes),\n        hour: parseInt(state.minutes) === 0 && parseInt(state.seconds) === 0 && parseInt(state.hour) === 0? (this.convertSubtraiString(state.hour).length === 2 ? this.convertSubtraiString(state.hour) : (`0${this.convertSubtraiString(state.hour)}`)) : state.hour,\n        update: true,\n        start: true,\n      }));\n    }, 1000);\n  }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.update){\n      if( prevState.seconds === '00' && prevState.minutes === '00' && prevState.hour === '00' && this.state.start === true){\n        this.setState({\n          seconds: '00',\n          minutes: '00',\n          hour: '00',\n          update: false,\n          start: false,\n      });\n        clearInterval(this.interval);\n        alert('Terminou o intervalo! VQV!')\n      }\n      else if( prevState.seconds === '00' && prevState.minutes === '00'){\n        this.setState((state) => ({\n          seconds: '59',\n          minutes: '59',\n          hour: (parseInt(state.hour) -1).toString(),\n      }));\n      }\n    }\n  }\n\n  render(){\n    const { seconds, minutes, hour} = this.state;\n    let classChro = 'Chronometer';\n    let classButton = 'buttonChronometer';\n    let classInput = 'inputChronometer';\n    let classText = 'textChronometer';\n    let { tema } = this.props\n\n    if(tema === 2){\n      classChro = 'ChronometerTrybe';\n      classButton = 'buttonChronometerTrybe';\n      classInput = 'inputChronometerTrybe';\n      classText = 'textChronometerTrybe';\n    }\n\n    if(tema === 3){\n      classChro = 'ChronometerStar';\n      classButton = 'buttonChronometerStar';\n      classInput = 'inputChronometerStar';\n      classText = 'textChronometerStar';\n    }\n\n    if(minutes === '02' && hour === '00'){\n      classChro = 'Chronometer2'\n    }\n\n    if(minutes === '01' && hour === '00'){\n      classChro = 'Chronometer3'\n    }\n\n    if(minutes === '00' && seconds !== '00' && hour === '00'){\n      classChro = 'Chronometer1'\n    }\n\n\n  return (\n    <div>\n      <p className={ classChro }>{`${hour}:${minutes}:${seconds}`}</p>  \n      <button className={classButton} onClick={this.changeChronometer}>Play</button>\n      <button className={classButton} onClick={this.stopChronometer}>Stop</button>\n      <button className={classButton} onClick={this.clearChronometer}>Clear</button>\n      <form>\n        <input className={classInput} name='minutes' type='button' onClick={this.changeState} value='5:00'/>\n        <input className={classInput} name='minutes' type='button' onClick={this.changeState} value='10:00'/>\n        <input className={classInput} name='minutes' type='button' onClick={this.changeState} value='15:00'/>\n      </form>\n      <form>\n        <input className={classText} name='hour' type='number' onChange={this.changeState} min=\"0\" max=\"24\" placeholder=\"hour\" required/> \n        <input className={classText} name='minutes' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"minutes\" required/> \n        <input className={classText} name='seconds' type='number' onChange={this.changeState} min=\"0\" max=\"59\" placeholder=\"seconds\" required/> \n       </form>\n    </div>\n  );\n}\n}\n\nexport default Chronometer;\n","\nimport './App.css';\nimport React from 'react'\nimport Chronometer from './Chronometer';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      showImage: 1,\n    }\n  }\n\n  changeImage = () => {\n    this.setState((prevState) => ({ showImage: prevState.showImage === 3 ? 1 : prevState.showImage + 1}));\n  }\n\n  render () {\n    const { showImage } = this.state;\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {showImage === 3 ? <span onClick={this.changeImage}><img  src='./logoStarWars.svg' width='300' className=\"App-logo\" alt=\"logo\" /></span> : (showImage === 2 ?  <span onClick={this.changeImage}><img  src='./logoTrybe.svg' width='210' className=\"App-logo\" alt=\"logo\" /></span> :  <span onClick={this.changeImage}><img  src='./logo.svg' className=\"App-logo\" alt=\"logo\" /></span>)}\n        <Chronometer className=\"Chronometer\" tema={showImage} />\n      </header>\n    </div>\n  );\n  }\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}